'use strict';

var tape = require('tape');
var validate = require('./../lib/validate');

tape('validate: should validate options object', function test(t) {
    t.test('should return an error if options is not an object', function(st) {
        var opts = {};
        var options = 'invalid';
        
        var error = validate(opts, options);
        
        st.equal(error instanceof TypeError, true, 'should return a TypeError');
        st.end();
    });

    t.test('should return an error if dir is not a string', function(st) {
        var opts = {};
        var options = { dir: 123 };
        
        var error = validate(opts, options);
        
        st.equal(error instanceof TypeError, true, 'should return a TypeError');
        st.end();
    });

    t.test('should return an error if mode is not valid', function(st) {
        var opts = {};
        var options = { mode: 'invalid' };
        
        var error = validate(opts, options);
        
        st.equal(error instanceof TypeError, true, 'should return a TypeError');
        st.end();
    });

    t.test('should correctly populate opts with valid options', function(st) {
        var opts = {};
        var options = { dir: '/some/path', mode: 'some' };
        
        var error = validate(opts, options);
        
        st.equal(error, null, 'should not return an error');
        st.deepEqual(opts, { dir: '/some/path', mode: 'some' }, 'should correctly populate opts');
        st.end();
    });
});
