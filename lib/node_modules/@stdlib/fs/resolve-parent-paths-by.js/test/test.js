/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var tape = require('tape');
var resolveParentPathsBy = require('./../lib');
var sync = require('./../lib/sync').default;


// TESTS //

tape('main export is a function', function test(t) {
    t.ok(typeof resolveParentPathsBy === 'function', 'main export is a function');
    t.end();
});

tape('attached to the main export is a function to resolve paths synchronously', function test(t) {
    t.equal(typeof resolveParentPathsBy.sync, 'function', 'has `sync` method');
    t.end();
});

tape('sync method resolves paths correctly', function test(t) {
    var opts = { dir: __dirname, mode: 'first' };
    var paths = resolveParentPathsBy.sync([ 'package.json' ], opts);
    
    t.ok(Array.isArray(paths), 'returns an array');
    t.ok(paths.length > 0, 'returns at least one path');
    t.equal(typeof paths[0], 'string', 'paths are strings');
    t.end();
});

tape('main export resolves paths correctly', function test(t) {
    var opts = { dir: __dirname, mode: 'first' };

    resolveParentPathsBy([ 'package.json' ], opts, function done(error, paths) {
        t.error(error, 'does not throw error');
        t.ok(Array.isArray(paths), 'returns an array');
        t.ok(paths.length > 0, 'returns at least one path');
        t.equal(typeof paths[0], 'string', 'paths are strings');
        t.end();
    });
});
